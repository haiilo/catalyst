@import 'variables';
@import 'mixins';

$-min-width: 8rem;
$-max-width: 16rem;
$-min-height: 2rem;
$-max-height: calc(100vh - 48px);

:host {
  display: contents;
}

:host([hidden]) {
  display: none;
}

::slotted(nav) {
  padding: 0.25rem;

  .aligned & {
    min-width: $-min-width;
    max-width: $-max-width;
  }

  .justified & {
    width: 100%;
  }
}

.content {
  position: fixed;
  background: cat-token('color.ui.background.surface');
  -webkit-overflow-scrolling: touch;
  min-height: $-min-height;
  max-height: $-max-height;
  @include cat-elevation(4);
  border-radius: cat-border-radius('m');
  border: 1px solid cat-token('color.ui.border.default');
  z-index: cat-z-index('dropdown');
  // The 3 lines below set the initial styling (when not visible)
  display: none;
  opacity: 0;
  transform: scale(0.9);
  transition:
    transform cat-token('time.transition.s') cubic-bezier(0.3, 0, 0.8, 0.15),
    opacity cat-token('time.transition.s') cubic-bezier(0.3, 0, 0.8, 0.15);

  // Sets the origin point so the scaling transition matches the placement
  &[data-placement^='top'] {
    transform-origin: bottom;
  }

  &[data-placement^='top-start'] {
    transform-origin: bottom left;
  }

  &[data-placement^='top-end'] {
    transform-origin: bottom right;
  }

  &[data-placement^='left'] {
    transform-origin: right;
  }

  &[data-placement^='left-start'] {
    transform-origin: right top;
  }

  &[data-placement^='left-end'] {
    transform-origin: right bottom;
  }

  &[data-placement^='right'] {
    transform-origin: left;
  }

  &[data-placement^='right-start'] {
    transform-origin: left top;
  }

  &[data-placement^='right-end'] {
    transform-origin: left bottom;
  }

  &[data-placement^='bottom'] {
    transform-origin: top;
  }

  &[data-placement^='bottom-start'] {
    transform-origin: top left;
  }

  &[data-placement^='bottom-end'] {
    transform-origin: top right;
  }

  &.show {
    opacity: 1;
    transform: scale(1);
    transition:
      transform cat-token('time.transition.m') cubic-bezier(0.05, 0.7, 0.1, 1),
      opacity cat-token('time.transition.m') cubic-bezier(0.05, 0.7, 0.1, 1);
  }

  &.overflow-auto {
    overflow: auto;
  }
}
