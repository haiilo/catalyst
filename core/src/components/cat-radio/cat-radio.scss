@use 'variables' as *;
@use 'mixins' as *;
@use 'src/components/cat-form-hint/cat-form-hint';

$radio-width: 1.25rem;
$radio-height: 1.25rem;

:host {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

:host([hidden]) {
  display: none;
}

:host([disabled="false"]) {
  cursor: auto !important;
}

label {
  display: flex;
  gap: 0.5rem;
  @include cat-body('m');
  cursor: pointer;
}

.label-left {
  flex-direction: row-reverse;
}

.radio {
  display: flex;
  position: relative;
  align-self: flex-start;
}

.circle-placeholder {
  width: calc($radio-width + 1px);
  flex-shrink: 0;
}

.circle {
  position: absolute;
  width: 0.75rem;
  height: 0.75rem;
  background-color: cat-token('color.theme.primary.bg');
  border-radius: 10rem;
  top: calc(50% - 0.375rem);
  left: calc(50% - 0.375rem);
  visibility: hidden;
  pointer-events: none;
}

input {
  margin: 0;
  width: $radio-width;
  height: $radio-height;
  appearance: none;
  background-color: cat-token('color.ui.background.input');
  border: 1px solid cat-token('color.ui.border.dark');
  border-radius: 10rem;
  cursor: inherit;

  &:checked {
    border-color: cat-token('color.theme.primary.bg');

    + .circle {
      visibility: visible;
    }
  }

  &:focus-visible {
    outline: 2px solid cat-token('color.ui.border.focus');
    outline-offset: 1px;
  }
}

:host(.cat-error) {
  input {
    border-color: cat-token('color.theme.danger.bg');
  }

  .circle {
    background-color: cat-token('color.theme.danger.bg');
  }
}

.label {
  flex: 1 1 auto;

  .is-hidden & {
    @include cat-visually-hidden;
  }
}

.is-disabled {
  cursor: not-allowed;
  color: cat-token('color.ui.font.muted');

  input {
    background-color: cat-token('color.ui.background.muted');

    &:checked {
      border-color: cat-token('color.ui.border.dark');
    }
  }

  .circle {
    background-color: cat-token('color.ui.border.dark');
  }
}

.align-center .radio {
  align-self: center;
}

.align-end .radio {
  align-self: flex-end;
}
