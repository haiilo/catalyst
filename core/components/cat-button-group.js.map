{"file":"cat-button-group.js","mappings":";;AAAA,MAAM,iBAAiB,GAAG,oEAAoE;;MCWjFA,gBAAc,iBAAAC,kBAAA,CAAA,MAAA,cAAA,SAAAC,CAAA,CAAA;AAL3B,IAAA,WAAA,GAAA;;;;AAMU,QAAA,IAAc,CAAA,cAAA,GAA2B,EAAE;AA6BpD;IAnBC,MAAM,GAAA;QACJ,QACE,CAAC,CAAA,IAAI,EAAC,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,OAAO,EAAA,YAAA,EAAa,IAAI,CAAC,SAAS,EAAA,EAC3C,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAM,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAS,CAAA,CACpD;;IAIH,YAAY,GAAA;AAClB,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAC9B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAC/B,0GAA0G,CAC3G,CACF;QACD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;AAC7C,YAAA,OAAO,CAAC,mBAAmB;gBACzB,KAAK,KAAK,CAAC,GAAG,OAAO,GAAG,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,QAAQ;AACxF,SAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["CatButtonGroup","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/cat-button-group/cat-button-group.scss?tag=cat-button-group&encapsulation=shadow","src/components/cat-button-group/cat-button-group.tsx"],"sourcesContent":[":host {\n  position: relative;\n  display: inline-flex;\n  vertical-align: middle;\n}\n","import { Component, Element, h, Host, Prop } from '@stencil/core';\n\n/**\n * Button groups are designed to bring together button controls that are of a\n * similar nature. For example text formatting controls.\n */\n@Component({\n  tag: 'cat-button-group',\n  styleUrl: 'cat-button-group.scss',\n  shadow: true\n})\nexport class CatButtonGroup {\n  private buttonElements: HTMLCatButtonElement[] = [];\n\n  @Element() hostElement!: HTMLElement;\n\n  /**\n   * Adds an accessible label for the button group that\n   * it is only shown in assistive technologies, like screen readers.\n   */\n  @Prop({ attribute: 'a11y-label' }) a11yLabel?: string;\n\n  render() {\n    return (\n      <Host role=\"group\" aria-label={this.a11yLabel}>\n        <slot onSlotchange={this.onSlotChange.bind(this)}></slot>\n      </Host>\n    );\n  }\n\n  private onSlotChange(): void {\n    this.buttonElements = Array.from(\n      this.hostElement.querySelectorAll(\n        ':scope > cat-button, :scope > cat-tooltip > cat-button, :scope > cat-dropdown cat-button[slot=\"trigger\"]'\n      )\n    );\n    this.buttonElements.forEach((element, index) => {\n      element.buttonGroupPosition =\n        index === 0 ? 'first' : index === this.buttonElements.length - 1 ? 'last' : 'middle';\n    });\n  }\n}\n"],"version":3}