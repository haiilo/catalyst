{"file":"cat-tag.js","mappings":"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","names":["CatTag","__stencil_proxyCustomElement","HTMLElement","i18n"],"sources":["src/components/cat-tag/cat-tag.scss?tag=cat-tag&encapsulation=shadow","src/components/cat-tag/cat-tag.tsx"],"sourcesContent":["@use '_snippets/form-label';\n@use 'variables' as *;\n@use 'src/components/cat-form-hint/cat-form-hint';\n@use 'utils/color';\n@use 'mixins' as *;\n\n:host {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\ninput {\n  font: inherit;\n  margin: 0;\n  min-width: 20rem;\n  padding: 0.375rem 0;\n  flex: 1 1 auto;\n  border: none;\n  outline: none;\n  background: none;\n  @include cat-ellipsis;\n\n  .input-disabled & {\n    cursor: not-allowed;\n    color: cat-token('color.ui.font.muted');\n  }\n\n  &::placeholder {\n    color: cat-token('color.ui.font.muted');\n  }\n\n  /* stylelint-disable property-no-vendor-prefix */\n  &:-webkit-autofill {\n    &,\n    &:hover,\n    &:focus {\n      -webkit-box-shadow: 0 0 0 9999px cat-token('color.ui.background.inputAutofill') inset;\n    }\n  }\n  /* stylelint-enable property-no-vendor-prefix */\n}\n\n.input-wrapper {\n  flex: 1 1 auto;\n  display: flex;\n  align-items: stretch;\n  gap: 0.25rem;\n  padding: 0.25rem 0.75rem;\n  min-height: 2rem;\n  background: cat-token('color.ui.background.input');\n  border-radius: cat-border-radius('m');\n  box-shadow: inset 0 0 0 1px rgb(var(--border-color));\n  transition: box-shadow cat-token('time.transition.s') linear;\n  --border-color: #{cat-token('color.ui.border.dark', $wrap: false)};\n  flex-wrap: wrap;\n\n  &.input-disabled {\n    background: cat-token('color.ui.background.muted');\n    cursor: not-allowed;\n    color: cat-token('color.ui.font.muted');\n  }\n\n  &:not(.input-disabled):hover {\n    box-shadow:\n      inset 0 0 0 1px rgb(var(--border-color)),\n      0 0 0 1px rgb(var(--border-color));\n  }\n\n  &:focus-within {\n    outline: 2px solid cat-token('color.ui.border.focus');\n    outline-offset: -1px;\n\n    &:has(.clearable:focus) {\n      outline: none;\n    }\n  }\n\n  &.input-invalid {\n    --border-color: #{cat-token('color.theme.danger.bg', 0.2, $wrap: false)};\n  }\n\n  /* stylelint-disable property-no-vendor-prefix */\n  &:has(input:-webkit-autofill) {\n    &,\n    &:hover,\n    &:focus {\n      background-color: cat-token('color.ui.background.inputAutofill');\n    }\n  }\n  /* stylelint-enable property-no-vendor-prefix */\n}\n\n.tag-pill {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.25rem 0.5rem;\n  background: cat-token('color.ui.background.muted');\n  border-radius: cat-border-radius('s');\n  white-space: nowrap;\n  min-width: 0;\n\n  > span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex: 1 1 0;\n  }\n\n  > cat-button {\n    margin-right: -0.25rem;\n    margin-left: -0.25rem;\n  }\n}\n\n.icon-suffix {\n  align-self: center;\n}\n\n.input-inner-wrapper {\n  flex: 1 1 auto;\n  display: flex;\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { coerceBoolean, coerceNumber } from '../../utils/coerce';\nimport { CatFormHint, ErrorMap } from '../cat-form-hint/cat-form-hint';\nimport { catI18nRegistry as i18n } from '../cat-i18n/cat-i18n-registry';\n\nlet nextUniqueId = 0;\n\n/**\n * An input that allows multiple values to be entered as tags.\n *\n * @part input - The native input element.\n * @part label - The native label element.\n */\n@Component({\n  tag: 'cat-tag',\n  styleUrl: 'cat-tag.scss',\n  shadow: {\n    delegatesFocus: true\n  }\n})\nexport class CatTag {\n  private readonly _id = `cat-input-${nextUniqueId++}`;\n  private get id() {\n    return this.identifier || this._id;\n  }\n\n  private input!: HTMLInputElement;\n  private errorMapSrc?: ErrorMap | true;\n\n  @Element() hostElement!: HTMLElement;\n\n  @State() hasSlottedLabel = false;\n\n  @State() hasSlottedHint = false;\n\n  @State() tags: string[] = [];\n\n  @State() errorMap?: ErrorMap | true;\n\n  /**\n   * Whether the label need a marker to shown if the select is required or optional.\n   */\n  @Prop() requiredMarker?: 'none' | 'required' | 'optional' | 'none!' | 'optional!' | 'required!' = 'optional';\n\n  /**\n   * Whether the select is disabled.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The placeholder text to display within the select.\n   */\n  @Prop() placeholder?: string;\n\n  /**\n   * Optional hint text(s) to be displayed with the select.\n   */\n  @Prop() hint?: string | string[];\n\n  /**\n   * A unique identifier for the input.\n   */\n  @Prop() identifier?: string;\n\n  /**\n   * The label for the select.\n   */\n  @Prop() label = '';\n\n  /**\n   * The name of the form control. Submitted with the form as part of a name/value pair.\n   */\n  @Prop() name?: string;\n\n  /**\n   * Visually hide the label, but still show it to assistive technologies like screen readers.\n   */\n  @Prop() labelHidden = false;\n\n  /**\n   * A value is required or must be checked for the form to be submittable.\n   */\n  @Prop() required = false;\n\n  /**\n   * Attributes that will be added to the native HTML input element.\n   */\n  @Prop() nativeAttributes?: { [key: string]: string };\n\n  /**\n   * A unique identifier for the underlying native element that is used for\n   * testing purposes. The attribute is added as `data-test` attribute and acts\n   * as a shorthand for `nativeAttributes={ 'data-test': 'test-Id' }`.\n   */\n  @Prop() testId?: string;\n\n  /**\n   * The value of the control.\n   */\n  @Prop({ mutable: true }) value?: string[];\n\n  /**\n   * Whether the input should show a clear button.\n   */\n  @Prop() clearable = false;\n\n  /**\n   * The validation errors for this input. Will render a hint under the input\n   * with the translated error message(s) `error.${key}`. If an object is\n   * passed, the keys will be used as error keys and the values translation\n   * parameters.\n   * If the value is `true`, the input will be marked as invalid without any\n   * hints under the input.\n   */\n  @Prop() errors?: boolean | string[] | ErrorMap;\n\n  /**\n   * Fine-grained control over when the errors are shown. Can be `false` to\n   * never show errors, `true` to show errors on blur, or a number to show\n   * errors change with the given delay in milliseconds or immediately on blur.\n   */\n  @Prop() errorUpdate: boolean | number = 0;\n\n  /**\n   * List of characters that should create a new tag. This need to be comparable to `keydownEvent.key`.\n   * Pasted values will also be split by those chars.\n   * Defaults to `[' ']`.\n   */\n  @Prop() tagCreationChars: string[] = [' '];\n\n  /**\n   * Whether new tag is added when the input is blurred.\n   */\n  @Prop() addOnBlur = false;\n\n  /**\n   * Emitted when the value is changed.\n   */\n  @Event() catChange!: EventEmitter<string[]>;\n\n  /**\n   * Emitted when the input received focus.\n   */\n  @Event() catFocus!: EventEmitter<FocusEvent>;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event() catBlur!: EventEmitter<FocusEvent>;\n\n  componentWillLoad(): void {\n    this.onErrorsChanged(this.errors, undefined, false);\n  }\n\n  componentWillRender(): void {\n    this.hasSlottedLabel = !!this.hostElement.querySelector('[slot=\"label\"]');\n    this.hasSlottedHint = !!this.hostElement.querySelector('[slot=\"hint\"]');\n  }\n\n  @Listen('keydown')\n  onKeyDown(event: KeyboardEvent): void {\n    const isInputFocused = this.hostElement.shadowRoot?.activeElement === this.input;\n    if (['Enter', ...this.tagCreationChars].includes(event.key) && isInputFocused) {\n      event.preventDefault();\n      this.addInputValue();\n    } else if (\n      ['Backspace'].includes(event.key) &&\n      this.input?.selectionStart === 0 &&\n      (this.value?.length ?? 0) > 0 &&\n      isInputFocused\n    ) {\n      this.value = this.value?.slice(0, -1) ?? [];\n      this.catChange.emit(this.value);\n    }\n  }\n\n  @Watch('errors')\n  onErrorsChanged(newValue?: boolean | string[] | ErrorMap, _oldValue?: unknown, update: boolean = true) {\n    if (!coerceBoolean(this.errorUpdate)) {\n      this.errorMap = undefined;\n    } else {\n      this.errorMapSrc = Array.isArray(newValue)\n        ? (newValue as string[]).reduce((acc, err) => ({ ...acc, [err]: undefined }), {})\n        : newValue || undefined;\n      if (update) {\n        this.showErrorsIfTimeout() || this.showErrorsIfNoFocus();\n      }\n    }\n  }\n\n  render() {\n    this.hostElement.tabIndex = Number(this.hostElement.getAttribute('tabindex')) || 0;\n    return (\n      <Host>\n        <div class={{ 'label-container': true, hidden: this.labelHidden }}>\n          {(this.hasSlottedLabel || this.label) && (\n            <label htmlFor={`tags-${this.id}-input`} part=\"label\">\n              <span class=\"label-wrapper\">\n                {(this.hasSlottedLabel && <slot name=\"label\"></slot>) || this.label}\n                <div class=\"label-metadata\">\n                  {!this.required && (this.requiredMarker ?? 'optional').startsWith('optional') && (\n                    <span class=\"label-optional\" aria-hidden=\"true\">\n                      ({i18n.t('input.optional')})\n                    </span>\n                  )}\n                  {this.required && this.requiredMarker?.startsWith('required') && (\n                    <span class=\"label-optional\" aria-hidden=\"true\">\n                      ({i18n.t('input.required')})\n                    </span>\n                  )}\n                </div>\n              </span>\n            </label>\n          )}\n        </div>\n        <div class={{ 'input-wrapper': true, 'input-disabled': this.disabled, 'input-invalid': this.invalid }}>\n          {this.value?.map(value => (\n            <div class=\"tag-pill\">\n              <span>{value}</span>\n              {!this.disabled && (\n                <cat-button\n                  size=\"xs\"\n                  variant=\"text\"\n                  icon=\"$cat:select-clear\"\n                  iconOnly\n                  a11yLabel={i18n.t('select.deselect')}\n                  onClick={() => this.deselect(value)}\n                  tabIndex={-1}\n                ></cat-button>\n              )}\n            </div>\n          ))}\n          <div class=\"input-inner-wrapper\">\n            <input\n              data-test={this.testId}\n              {...this.nativeAttributes}\n              part=\"input\"\n              id={`tags-${this.id}-input`}\n              class=\"tags-input\"\n              role=\"combobox\"\n              ref={el => (this.input = el as HTMLInputElement)}\n              aria-invalid={this.invalid ? 'true' : undefined}\n              aria-describedby={this.hasHint ? this.id + '-hint' : undefined}\n              onInput={this.onInput.bind(this)}\n              onBlur={this.onBlur.bind(this)}\n              placeholder={this.placeholder}\n              disabled={this.disabled}\n            ></input>\n            {this.clearable && !this.disabled && (this.value?.length ?? 0) > 0 && (\n              <cat-button\n                class=\"clearable\"\n                icon=\"$cat:input-close\"\n                icon-only=\"true\"\n                size=\"s\"\n                variant=\"text\"\n                a11y-label={i18n.t('input.clear')}\n                onClick={this.clear.bind(this)}\n                data-dropdown-no-close\n              ></cat-button>\n            )}\n            {this.invalid && <cat-icon icon=\"$cat:input-error\" class=\"icon-suffix cat-text-danger\" size=\"l\"></cat-icon>}\n          </div>\n        </div>\n        {this.hasHint && (\n          <CatFormHint\n            id={this.id}\n            hint={this.hint}\n            slottedHint={this.hasSlottedHint && <slot name=\"hint\"></slot>}\n            errorMap={this.errorMap}\n          />\n        )}\n      </Host>\n    );\n  }\n\n  private get hasHint() {\n    return !!this.hint || !!this.hasSlottedHint || this.invalid;\n  }\n\n  private get invalid() {\n    return this.errorMap === true || !!Object.keys(this.errorMap || {}).length;\n  }\n\n  private onInput() {\n    const currentValue = [\n      ...new Set(this.input?.value?.split(this.createSplitRegex(this.tagCreationChars)) ?? [])\n    ].filter(value => !!value && !this.value?.includes(value));\n    if (currentValue.length > 1) {\n      this.value = [...(this.value ?? []), ...currentValue];\n      this.catChange.emit(this.value);\n      if (this.input) {\n        this.input.value = '';\n      }\n    }\n  }\n\n  private onBlur() {\n    if (this.addOnBlur) {\n      this.addInputValue();\n    }\n  }\n\n  private addInputValue() {\n    const inputValue = this.input?.value.trim();\n    if (inputValue && !this.value?.includes(inputValue)) {\n      this.value = [...(this.value ?? []), inputValue];\n      this.catChange.emit(this.value);\n    }\n    if (this.input) {\n      this.input.value = '';\n    }\n  }\n\n  private clear() {\n    this.value = [];\n    this.catChange.emit(this.value);\n    if (this.input) {\n      this.input.value = '';\n    }\n  }\n\n  private deselect(value: string) {\n    this.value = this.value?.filter(element => element !== value);\n    this.catChange.emit(this.value);\n  }\n\n  private showErrors() {\n    this.errorMap = this.errorMapSrc;\n  }\n\n  private errorUpdateTimeoutId?: number;\n  private showErrorsIfTimeout() {\n    const errorUpdate = coerceNumber(this.errorUpdate, null);\n    if (errorUpdate !== null) {\n      typeof this.errorUpdateTimeoutId === 'number' && window.clearTimeout(this.errorUpdateTimeoutId);\n      this.errorUpdateTimeoutId = window.setTimeout(() => this.showErrors(), errorUpdate);\n      return true;\n    }\n    return false;\n  }\n\n  private showErrorsIfNoFocus() {\n    const hasFocus = document.activeElement === this.hostElement || document.activeElement === this.input;\n    if (!hasFocus) {\n      this.showErrors();\n    }\n  }\n\n  private createSplitRegex(delimiters: string[]): RegExp {\n    // Escape special regex characters in the array\n    const escapedDelimiters = delimiters.map(delimiter => delimiter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n\n    // Add newline characters to the list of delimiters\n    escapedDelimiters.push('\\\\n', '\\\\r');\n\n    // Join the escaped delimiters to create a character class\n    const regexPattern = `[${escapedDelimiters.join('')}]`;\n\n    return new RegExp(regexPattern, 'g');\n  }\n}\n"],"version":3}