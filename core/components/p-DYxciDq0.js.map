{"file":"p-DYxciDq0.js","mappings":";;AAIA;;;;;AAKG;MACU,eAAe,CAAA;AAS1B,IAAA,WAAA,GAAA;;AANiB,QAAA,IAAA,CAAA,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAClD,QAAA,IAAA,CAAA,IAAI,GAAwB,IAAI,GAAG,EAAE;;;;;;;;AAepD,QAAA,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,KAAK,IAAG;AACpD,YAAA,MAAM,EAAE,MAAM,EAAE,GAAI,KAAqB,IAAI,EAAE;YAC/C,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;;AAEvC,SAAC,CAAC;AACF,QAAA,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,KAAK,IAAG;AAC9C,YAAA,MAAM,EAAE,MAAM,EAAE,GAAI,KAAqB,IAAI,EAAE;YAC/C,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;;AAE/B,SAAC,CAAC;AACF,QAAA,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,KAAK,IAAG;AAChD,YAAA,MAAM,EAAE,MAAM,EAAE,GAAI,KAAqB,IAAI,EAAE;YAC/C,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;AACnC,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;AAEpB,SAAC,CAAC;;AAGJ,IAAA,OAAO,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;AAC7B,YAAA,eAAe,CAAC,QAAQ,GAAG,IAAI,eAAe,EAAE;;QAElD,OAAO,eAAe,CAAC,QAAQ;;IAGjC,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE,SAAS,EAAE,QAAQ,IAAI,IAAI;;AAG5D,IAAA,SAAS,CAAC,MAAc,EAAE,MAAM,GAAG,KAAK,EAAA;AACtC,QAAA,IAAI;AACF,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAClD,YAAA,GAAG,CAAC,IAAI,CAAC,CAAA,kBAAA,EAAqB,IAAI,CAAC,EAAE,CAAA,cAAA,EAAiB,IAAI,CAAC,OAAO,CAAA,CAAE,CAAC;YACrE,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;QAC/F,OAAO,GAAG,EAAE;YACZ,GAAG,CAAC,KAAK,CAAC,CAAqB,kBAAA,EAAA,IAAI,CAAC,EAAE,CAAqB,kBAAA,EAAA,MAAM,CAAE,CAAA,CAAC;;;AAIxE,IAAA,GAAG,CAAC,IAAsD,EAAE,MAAM,GAAG,KAAK,EAAA;AACxE,QAAA,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;AAC9B,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI;YACvB,GAAG,CAAC,IAAI,CAAC,CAAA,kBAAA,EAAqB,IAAI,CAAC,EAAE,CAAyB,uBAAA,CAAA,CAAC;;aAC1D;YACL,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;YACxC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACpE,GAAG,CAAC,IAAI,CAAC,CAAA,kBAAA,EAAqB,IAAI,CAAC,EAAE,CAAgB,aAAA,EAAA,WAAW,CAAC,MAAM,KAAK,CAAC,GAAG,UAAU,GAAG,SAAS,CAAE,CAAA,CAAC;;QAE3G,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;IAGzF,KAAK,CAAC,MAAM,GAAG,KAAK,EAAA;AAClB,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QACjB,GAAG,CAAC,IAAI,CAAC,CAAA,kBAAA,EAAqB,IAAI,CAAC,EAAE,CAAoB,kBAAA,CAAA,CAAC;AAC1D,QAAA,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;;IAGpE,CAAC,CAAC,GAAW,EAAE,MAAmC,EAAA;QAChD,MAAM,OAAO,GACX,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE,MAAM,CAAC;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,2BAA2B,EAAE,CAAC,MAAM,EAAE,GAAG,KAAK,CAAA,EAAG,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAA,CAAE,CAAC;AACrG,QAAA,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,GAAG,CAAC,KAAK,CAAC,CAAqB,kBAAA,EAAA,IAAI,CAAC,EAAE,CAA0B,uBAAA,EAAA,GAAG,CAAE,CAAA,CAAC;AACtE,YAAA,OAAO,GAAG;;AAEZ,QAAA,OAAO,OAAO;;IAGR,UAAU,CAAI,IAAY,EAAE,MAAU,EAAA;AAC5C,QAAA,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE;AAC3B,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,QAAQ,EAAE,IAAI;YACd;AACD,SAAA,CAAC;;AAEL;MAEY,eAAe,GAAG,eAAe,CAAC,WAAW;;;;","names":[],"sources":["src/components/cat-i18n/cat-i18n-registry.ts"],"sourcesContent":["import log from 'loglevel';\n\nexport type CatI18nTranslationFn = (key: string, params?: unknown) => string;\n\n/**\n * A registry for lightweight internationalization (i18n) in applications using\n * the Catalyst design system. The registry stores translations and provides\n * methods for setting the locale, registering translations, and retrieving\n * translated messages.\n */\nexport class CatI18nRegistry {\n  private static instance: CatI18nRegistry;\n\n  private readonly id = (Math.random() + 1).toString(36).substring(2);\n  private readonly i18n: Map<string, string> = new Map();\n\n  private _locale?: string;\n  private _translator?: CatI18nTranslationFn;\n\n  private constructor() {\n    // hide constructor\n\n    // In rare cases, the registry can be initialized twice. This can happen in\n    // a micro frontend architecture where the registry is initialized in the\n    // host application and in the micro frontend. To prevent the registry in\n    // one application from overwriting the registry in the other, we listen for\n    // events that are dispatched when messages are added or removed in other\n    // applications and add or remove messages if the event was not dispatched\n    // by this registry.\n    window.addEventListener('cat-i18n-setLocale', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (detail && detail.id !== this.id) {\n        this.setLocale(detail.locale, true);\n      }\n    });\n    window.addEventListener('cat-i18n-set', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (detail && detail.id !== this.id) {\n        this.set(detail.i18n, true);\n      }\n    });\n    window.addEventListener('cat-i18n-clear', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (detail && detail.id !== this.id) {\n        this.clear(true);\n      }\n    });\n  }\n\n  static getInstance(): CatI18nRegistry {\n    if (!CatI18nRegistry.instance) {\n      CatI18nRegistry.instance = new CatI18nRegistry();\n    }\n    return CatI18nRegistry.instance;\n  }\n\n  getLocale(): string {\n    return this._locale ?? window?.navigator?.language ?? 'en';\n  }\n\n  setLocale(locale: string, silent = false): void {\n    try {\n      this._locale = Intl.getCanonicalLocales(locale)[0];\n      log.info(`[CatI18nRegistry::${this.id}] Set locale: ${this._locale}`);\n      !silent && window.dispatchEvent(this.buildEvent('cat-i18n-setLocale', { locale, id: this.id }));\n    } catch (err) {\n      log.error(`[CatI18nRegistry::${this.id}] Invalid locale: ${locale}`);\n    }\n  }\n\n  set(i18n: { [key: string]: string } | CatI18nTranslationFn, silent = false): void {\n    if (typeof i18n === 'function') {\n      this._translator = i18n;\n      log.info(`[CatI18nRegistry::${this.id}] Registered translator`);\n    } else {\n      const i18nEntries = Object.entries(i18n);\n      i18nEntries.forEach(([key, message]) => this.i18n.set(key, message));\n      log.info(`[CatI18nRegistry::${this.id}] Registered ${i18nEntries.length !== 1 ? 'messages' : 'message'}`);\n    }\n    !silent && window.dispatchEvent(this.buildEvent('cat-i18n-set', { i18n, id: this.id }));\n  }\n\n  clear(silent = false): void {\n    this.i18n.clear();\n    log.info(`[CatI18nRegistry::${this.id}] Cleared messages`);\n    !silent && window.dispatchEvent(this.buildEvent('cat-i18n-clear'));\n  }\n\n  t(key: string, params?: { [key: string]: unknown }): string {\n    const message =\n      this._translator?.(key, params) ??\n      this.i18n.get(key)?.replace(/{{\\s*([-a-zA-Z._]+)\\s*}}/g, (_match, key) => `${params?.[key] ?? ''}`);\n    if (message === undefined) {\n      log.error(`[CatI18nRegistry::${this.id}] Unknown message key: ${key}`);\n      return key;\n    }\n    return message;\n  }\n\n  private buildEvent<T>(name: string, detail?: T) {\n    return new CustomEvent(name, {\n      bubbles: true,\n      composed: true,\n      detail\n    });\n  }\n}\n\nexport const catI18nRegistry = CatI18nRegistry.getInstance();\n"],"version":3}