{"file":"p-CFH-AGT6.js","mappings":"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","names":["this"],"sources":["../node_modules/.pnpm/loglevel@1.9.2/node_modules/loglevel/lib/loglevel.js"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n"],"version":3}