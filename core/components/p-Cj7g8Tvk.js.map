{"file":"p-Cj7g8Tvk.js","mappings":"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","names":[],"sources":["src/components/cat-icon/cat-icon-registry.ts"],"sourcesContent":["import chevronDoubleLeft16 from '@haiilo/catalyst-icons/src/16-chevron-double-left.svg';\nimport chevronDoubleRight16 from '@haiilo/catalyst-icons/src/16-chevron-double-right.svg';\nimport chevronLeft16 from '@haiilo/catalyst-icons/src/16-chevron-left.svg';\nimport chevronRight16 from '@haiilo/catalyst-icons/src/16-chevron-right.svg';\nimport cross16 from '@haiilo/catalyst-icons/src/16-cross.svg';\nimport alertCircleOutlined from '@haiilo/catalyst-icons/src/alert-circle-outlined.svg';\nimport calendarOutlined from '@haiilo/catalyst-icons/src/calendar-outlined.svg';\nimport checkCircleFilled from '@haiilo/catalyst-icons/src/check-circle-filled.svg';\nimport chevronDownOutlined from '@haiilo/catalyst-icons/src/chevron-down-outlined.svg';\nimport chevronLeftOutlined from '@haiilo/catalyst-icons/src/chevron-left-outlined.svg';\nimport chevronRightOutlined from '@haiilo/catalyst-icons/src/chevron-right-outlined.svg';\nimport clockFilled from '@haiilo/catalyst-icons/src/clock-filled.svg';\nimport clockOutlined from '@haiilo/catalyst-icons/src/clock-outlined.svg';\nimport crossCircleFilled from '@haiilo/catalyst-icons/src/cross-circle-filled.svg';\nimport crossCircleOutlined from '@haiilo/catalyst-icons/src/cross-circle-outlined.svg';\nimport crossOutlined from '@haiilo/catalyst-icons/src/cross-outlined.svg';\nimport dangerFilled from '@haiilo/catalyst-icons/src/danger-filled.svg';\nimport eyeClosedOutlined from '@haiilo/catalyst-icons/src/eye-closed-outlined.svg';\nimport eyeOpenOutlined from '@haiilo/catalyst-icons/src/eye-open-outlined.svg';\nimport infoCircleFilled from '@haiilo/catalyst-icons/src/info-circle-filled.svg';\nimport starCircleFilled from '@haiilo/catalyst-icons/src/star-circle-filled.svg';\nimport log from 'loglevel';\n\nexport class CatIconRegistry {\n  private static instance: CatIconRegistry;\n\n  private readonly id = (Math.random() + 1).toString(36).substring(2);\n  private readonly icons: Map<string, string> = new Map();\n\n  // ignore syncing in backwards compatible manner\n  syncIcons: boolean = true;\n\n  private constructor() {\n    // hide constructor\n\n    // register default icons that are used in the framework by other components\n    this.addIcons(\n      {\n        'alert-primary': starCircleFilled,\n        'alert-secondary': clockFilled,\n        'alert-info': infoCircleFilled,\n        'alert-success': checkCircleFilled,\n        'alert-warning': dangerFilled,\n        'alert-danger': crossCircleFilled,\n        'datepicker-month-prev': chevronLeft16,\n        'datepicker-month-next': chevronRight16,\n        'datepicker-year-prev': chevronDoubleLeft16,\n        'datepicker-year-next': chevronDoubleRight16,\n        'datepicker-calendar': calendarOutlined,\n        'timepicker-clock': clockOutlined,\n        'dialog-close': crossOutlined,\n        'input-close': crossCircleOutlined,\n        'input-error': alertCircleOutlined,\n        'input-password-show': eyeOpenOutlined,\n        'input-password-hide': eyeClosedOutlined,\n        'notification-close': crossCircleOutlined,\n        'pagination-left': chevronLeftOutlined,\n        'pagination-right': chevronRightOutlined,\n        'select-clear': cross16,\n        'select-open': chevronDownOutlined\n      },\n      '$cat',\n      true\n    );\n\n    // In rare cases, the registry can be initialized twice. This can happen in\n    // a micro frontend architecture where the registry is initialized in the\n    // host application and in the micro frontend. To prevent the registry in\n    // one application from overwriting the registry in the other, we listen for\n    // events that are dispatched when icons are added or removed in other\n    // applications and add or remove icons if the event was not dispatched by\n    // this registry.\n    window.addEventListener('cat-icons-added', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (this.syncIcons && detail && detail.id !== this.id) {\n        this.addIcons(detail.icons, detail.setName, true);\n      }\n    });\n    window.addEventListener('cat-icons-removed', event => {\n      const { detail } = (event as CustomEvent) || {};\n      if (this.syncIcons && detail && detail.id !== this.id) {\n        this.removeIcons(detail.names, detail.setName, true);\n      }\n    });\n  }\n\n  static getInstance(): CatIconRegistry {\n    if (!CatIconRegistry.instance) {\n      CatIconRegistry.instance = new CatIconRegistry();\n    }\n    return CatIconRegistry.instance;\n  }\n\n  getIcon(name: string, setName?: string): string | undefined {\n    const icon = this.icons.get(this.buildName(name, setName));\n    if (!icon) {\n      log.error(`[CatIconRegistry::${this.id}] Unknown icon${setName ? ` in set ${setName}` : ''}: ${name}`);\n    }\n    return icon;\n  }\n\n  addIcons(icons: { [name: string]: string }, setName?: string, silent = false): CatIconRegistry {\n    const iconEntries = Object.entries(icons);\n    const iconSize = iconEntries.length;\n    iconEntries.forEach(([name, data]) => this.icons.set(this.buildName(name, setName), data));\n    log.info(\n      `[CatIconRegistry::${this.id}] Added ${iconSize !== 1 ? 'icons' : 'icon'}${setName ? ` to set ${setName}` : ''}`\n    );\n    !silent && window.dispatchEvent(this.buildEvent('cat-icons-added', { id: this.id, icons, setName }));\n    return this;\n  }\n\n  removeIcons(names: string[], setName?: string, silent = false): CatIconRegistry {\n    const iconSize = names.length;\n    names.forEach(name => this.icons.delete(this.buildName(name, setName)));\n    log.info(\n      `[CatIconRegistry::${this.id}] Removed ${iconSize !== 1 ? 'icons' : 'icon'}${\n        setName ? ` from set ${setName}` : ''\n      }`\n    );\n    !silent && window.dispatchEvent(this.buildEvent('cat-icons-removed', { id: this.id, names, setName }));\n    return this;\n  }\n\n  private buildName(name: string, setName?: string) {\n    return setName ? `${setName}:${name}` : name;\n  }\n\n  private buildEvent<T>(name: string, detail?: T) {\n    return new CustomEvent(name, {\n      bubbles: true,\n      composed: true,\n      detail\n    });\n  }\n}\n\nexport const catIconRegistry = CatIconRegistry.getInstance();\n"],"version":3}