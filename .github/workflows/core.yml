name: Core

on:
  push:
    branches:
      - main
    paths:
      - "core/**"
  pull_request:
    paths:
      - "core/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install
        run: pnpm install
      - name: Build
        run: |
          pnpm run build:tokens
          pnpm run build:core
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install
        run: pnpm install
      - name: Lint
        run: |
          pnpm --filter @haiilo/catalyst run prettier:check
          pnpm --filter @haiilo/catalyst run lint
          pnpm --filter @haiilo/catalyst run lint:style
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install
        run: pnpm install
      - name: Build
        run: pnpm run build:tokens
      - name: Install Chrome
        run: node node_modules/puppeteer/install.mjs
      - name: Test
        run: pnpm --filter @haiilo/catalyst run test:ci
      - name: Generate coverage summary
        if: always()
        run: |
          if [ -f core/coverage/coverage-summary.json ]; then
            echo "## Core Coverage Report" >> $GITHUB_STEP_SUMMARY
            node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('core/coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            console.log('| Metric | Coverage |');
            console.log('|--------|----------|');
            console.log(\`| Statements | \${total.statements.pct}% (\${total.statements.covered}/\${total.statements.total}) |\`);
            console.log(\`| Branches | \${total.branches.pct}% (\${total.branches.covered}/\${total.branches.total}) |\`);
            console.log(\`| Functions | \${total.functions.pct}% (\${total.functions.covered}/\${total.functions.total}) |\`);
            console.log(\`| Lines | \${total.lines.pct}% (\${total.lines.covered}/\${total.lines.total}) |\`);
            " >> $GITHUB_STEP_SUMMARY
          fi
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: core-coverage
          path: core/coverage/
          retention-days: 30
      - name: Check coverage on changed lines
        if: github.event_name == 'pull_request'
        uses: barecheck/code-coverage-action@v1
        with:
          barecheck-github-app-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: core/coverage/lcov.info
          base-lcov-file: core/coverage/lcov.info
          minimum-ratio: 80 # minimum coverage percentage
          send-summary-comment: true
          show-annotations: 'warning'
          app-name: 'Core'
      - name: Coverage report
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: core/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true
          title: 'Core Coverage Report'
