'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */

import { type CatButtonCustomEvent, type CatCardCustomEvent, type CatCheckboxCustomEvent, type CatDateCustomEvent, type CatDatepickerCustomEvent, type CatDropdownCustomEvent, type CatInputCustomEvent, type CatRadioCustomEvent, type CatRadioGroupCustomEvent, type CatSelectCustomEvent, type CatTabCustomEvent, type CatTagCustomEvent, type CatTextareaCustomEvent, type CatTimeCustomEvent, type CatToggleCustomEvent } from "@haiilo/catalyst";
import { CatAlert as CatAlertElement, defineCustomElement as defineCatAlert } from "@haiilo/catalyst/components/cat-alert.js";
import { CatAvatar as CatAvatarElement, defineCustomElement as defineCatAvatar } from "@haiilo/catalyst/components/cat-avatar.js";
import { CatBadge as CatBadgeElement, defineCustomElement as defineCatBadge } from "@haiilo/catalyst/components/cat-badge.js";
import { CatButtonGroup as CatButtonGroupElement, defineCustomElement as defineCatButtonGroup } from "@haiilo/catalyst/components/cat-button-group.js";
import { CatButton as CatButtonElement, defineCustomElement as defineCatButton } from "@haiilo/catalyst/components/cat-button.js";
import { CatCard as CatCardElement, defineCustomElement as defineCatCard } from "@haiilo/catalyst/components/cat-card.js";
import { CatCheckbox as CatCheckboxElement, defineCustomElement as defineCatCheckbox } from "@haiilo/catalyst/components/cat-checkbox.js";
import { CatDateInline as CatDateInlineElement, defineCustomElement as defineCatDateInline } from "@haiilo/catalyst/components/cat-date-inline.js";
import { CatDate as CatDateElement, defineCustomElement as defineCatDate } from "@haiilo/catalyst/components/cat-date.js";
import { CatDatepickerInline as CatDatepickerInlineElement, defineCustomElement as defineCatDatepickerInline } from "@haiilo/catalyst/components/cat-datepicker-inline.js";
import { CatDatepicker as CatDatepickerElement, defineCustomElement as defineCatDatepicker } from "@haiilo/catalyst/components/cat-datepicker.js";
import { CatDropdown as CatDropdownElement, defineCustomElement as defineCatDropdown } from "@haiilo/catalyst/components/cat-dropdown.js";
import { CatFormGroup as CatFormGroupElement, defineCustomElement as defineCatFormGroup } from "@haiilo/catalyst/components/cat-form-group.js";
import { CatIcon as CatIconElement, defineCustomElement as defineCatIcon } from "@haiilo/catalyst/components/cat-icon.js";
import { CatInput as CatInputElement, defineCustomElement as defineCatInput } from "@haiilo/catalyst/components/cat-input.js";
import { CatPagination as CatPaginationElement, defineCustomElement as defineCatPagination } from "@haiilo/catalyst/components/cat-pagination.js";
import { CatRadioGroup as CatRadioGroupElement, defineCustomElement as defineCatRadioGroup } from "@haiilo/catalyst/components/cat-radio-group.js";
import { CatRadio as CatRadioElement, defineCustomElement as defineCatRadio } from "@haiilo/catalyst/components/cat-radio.js";
import { CatScrollable as CatScrollableElement, defineCustomElement as defineCatScrollable } from "@haiilo/catalyst/components/cat-scrollable.js";
import { CatSelectDemo as CatSelectDemoElement, defineCustomElement as defineCatSelectDemo } from "@haiilo/catalyst/components/cat-select-demo.js";
import { CatSelect as CatSelectElement, defineCustomElement as defineCatSelect } from "@haiilo/catalyst/components/cat-select.js";
import { CatSkeleton as CatSkeletonElement, defineCustomElement as defineCatSkeleton } from "@haiilo/catalyst/components/cat-skeleton.js";
import { CatSpinner as CatSpinnerElement, defineCustomElement as defineCatSpinner } from "@haiilo/catalyst/components/cat-spinner.js";
import { CatTab as CatTabElement, defineCustomElement as defineCatTab } from "@haiilo/catalyst/components/cat-tab.js";
import { CatTabs as CatTabsElement, defineCustomElement as defineCatTabs } from "@haiilo/catalyst/components/cat-tabs.js";
import { CatTag as CatTagElement, defineCustomElement as defineCatTag } from "@haiilo/catalyst/components/cat-tag.js";
import { CatTextarea as CatTextareaElement, defineCustomElement as defineCatTextarea } from "@haiilo/catalyst/components/cat-textarea.js";
import { CatTime as CatTimeElement, defineCustomElement as defineCatTime } from "@haiilo/catalyst/components/cat-time.js";
import { CatToggle as CatToggleElement, defineCustomElement as defineCatToggle } from "@haiilo/catalyst/components/cat-toggle.js";
import { CatTooltip as CatTooltipElement, defineCustomElement as defineCatTooltip } from "@haiilo/catalyst/components/cat-tooltip.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type CatAlertEvents = NonNullable<unknown>;

export const CatAlert: StencilReactComponent<CatAlertElement, CatAlertEvents> = /*@__PURE__*/ createComponent<CatAlertElement, CatAlertEvents>({
    tagName: 'cat-alert',
    elementClass: CatAlertElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatAlertEvents,
    defineCustomElement: defineCatAlert
});

type CatAvatarEvents = NonNullable<unknown>;

export const CatAvatar: StencilReactComponent<CatAvatarElement, CatAvatarEvents> = /*@__PURE__*/ createComponent<CatAvatarElement, CatAvatarEvents>({
    tagName: 'cat-avatar',
    elementClass: CatAvatarElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatAvatarEvents,
    defineCustomElement: defineCatAvatar
});

type CatBadgeEvents = NonNullable<unknown>;

export const CatBadge: StencilReactComponent<CatBadgeElement, CatBadgeEvents> = /*@__PURE__*/ createComponent<CatBadgeElement, CatBadgeEvents>({
    tagName: 'cat-badge',
    elementClass: CatBadgeElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatBadgeEvents,
    defineCustomElement: defineCatBadge
});

type CatButtonEvents = {
    onCatClick: EventName<CatButtonCustomEvent<MouseEvent>>,
    onCatFocus: EventName<CatButtonCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatButtonCustomEvent<FocusEvent>>
};

export const CatButton: StencilReactComponent<CatButtonElement, CatButtonEvents> = /*@__PURE__*/ createComponent<CatButtonElement, CatButtonEvents>({
    tagName: 'cat-button',
    elementClass: CatButtonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatClick: 'catClick',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatButtonEvents,
    defineCustomElement: defineCatButton
});

type CatButtonGroupEvents = NonNullable<unknown>;

export const CatButtonGroup: StencilReactComponent<CatButtonGroupElement, CatButtonGroupEvents> = /*@__PURE__*/ createComponent<CatButtonGroupElement, CatButtonGroupEvents>({
    tagName: 'cat-button-group',
    elementClass: CatButtonGroupElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatButtonGroupEvents,
    defineCustomElement: defineCatButtonGroup
});

type CatCardEvents = { onCatLoad: EventName<CatCardCustomEvent<FocusEvent>> };

export const CatCard: StencilReactComponent<CatCardElement, CatCardEvents> = /*@__PURE__*/ createComponent<CatCardElement, CatCardEvents>({
    tagName: 'cat-card',
    elementClass: CatCardElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCatLoad: 'catLoad' } as CatCardEvents,
    defineCustomElement: defineCatCard
});

type CatCheckboxEvents = {
    onCatChange: EventName<CustomEvent<any>>,
    onCatFocus: EventName<CatCheckboxCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatCheckboxCustomEvent<FocusEvent>>
};

export const CatCheckbox: StencilReactComponent<CatCheckboxElement, CatCheckboxEvents> = /*@__PURE__*/ createComponent<CatCheckboxElement, CatCheckboxEvents>({
    tagName: 'cat-checkbox',
    elementClass: CatCheckboxElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatCheckboxEvents,
    defineCustomElement: defineCatCheckbox
});

type CatDateEvents = {
    onCatChange: EventName<CustomEvent<string>>,
    onCatFocus: EventName<CatDateCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatDateCustomEvent<FocusEvent>>
};

export const CatDate: StencilReactComponent<CatDateElement, CatDateEvents> = /*@__PURE__*/ createComponent<CatDateElement, CatDateEvents>({
    tagName: 'cat-date',
    elementClass: CatDateElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatDateEvents,
    defineCustomElement: defineCatDate
});

type CatDateInlineEvents = { onCatChange: EventName<CustomEvent<string>> };

export const CatDateInline: StencilReactComponent<CatDateInlineElement, CatDateInlineEvents> = /*@__PURE__*/ createComponent<CatDateInlineElement, CatDateInlineEvents>({
    tagName: 'cat-date-inline',
    elementClass: CatDateInlineElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCatChange: 'catChange' } as CatDateInlineEvents,
    defineCustomElement: defineCatDateInline
});

type CatDatepickerEvents = {
    onCatChange: EventName<CustomEvent<string>>,
    onCatFocus: EventName<CatDatepickerCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatDatepickerCustomEvent<FocusEvent>>
};

export const CatDatepicker: StencilReactComponent<CatDatepickerElement, CatDatepickerEvents> = /*@__PURE__*/ createComponent<CatDatepickerElement, CatDatepickerEvents>({
    tagName: 'cat-datepicker',
    elementClass: CatDatepickerElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatDatepickerEvents,
    defineCustomElement: defineCatDatepicker
});

type CatDatepickerInlineEvents = { onCatChange: EventName<CustomEvent<string>> };

export const CatDatepickerInline: StencilReactComponent<CatDatepickerInlineElement, CatDatepickerInlineEvents> = /*@__PURE__*/ createComponent<CatDatepickerInlineElement, CatDatepickerInlineEvents>({
    tagName: 'cat-datepicker-inline',
    elementClass: CatDatepickerInlineElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCatChange: 'catChange' } as CatDatepickerInlineEvents,
    defineCustomElement: defineCatDatepickerInline
});

type CatDropdownEvents = {
    onCatOpen: EventName<CatDropdownCustomEvent<FocusEvent>>,
    onCatClose: EventName<CatDropdownCustomEvent<FocusEvent>>
};

export const CatDropdown: StencilReactComponent<CatDropdownElement, CatDropdownEvents> = /*@__PURE__*/ createComponent<CatDropdownElement, CatDropdownEvents>({
    tagName: 'cat-dropdown',
    elementClass: CatDropdownElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatOpen: 'catOpen',
        onCatClose: 'catClose'
    } as CatDropdownEvents,
    defineCustomElement: defineCatDropdown
});

type CatFormGroupEvents = NonNullable<unknown>;

export const CatFormGroup: StencilReactComponent<CatFormGroupElement, CatFormGroupEvents> = /*@__PURE__*/ createComponent<CatFormGroupElement, CatFormGroupEvents>({
    tagName: 'cat-form-group',
    elementClass: CatFormGroupElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatFormGroupEvents,
    defineCustomElement: defineCatFormGroup
});

type CatIconEvents = NonNullable<unknown>;

export const CatIcon: StencilReactComponent<CatIconElement, CatIconEvents> = /*@__PURE__*/ createComponent<CatIconElement, CatIconEvents>({
    tagName: 'cat-icon',
    elementClass: CatIconElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatIconEvents,
    defineCustomElement: defineCatIcon
});

type CatInputEvents = {
    onCatChange: EventName<CustomEvent<string>>,
    onCatFocus: EventName<CatInputCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatInputCustomEvent<FocusEvent>>
};

export const CatInput: StencilReactComponent<CatInputElement, CatInputEvents> = /*@__PURE__*/ createComponent<CatInputElement, CatInputEvents>({
    tagName: 'cat-input',
    elementClass: CatInputElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatInputEvents,
    defineCustomElement: defineCatInput
});

type CatPaginationEvents = { onCatChange: EventName<CustomEvent<number>> };

export const CatPagination: StencilReactComponent<CatPaginationElement, CatPaginationEvents> = /*@__PURE__*/ createComponent<CatPaginationElement, CatPaginationEvents>({
    tagName: 'cat-pagination',
    elementClass: CatPaginationElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCatChange: 'catChange' } as CatPaginationEvents,
    defineCustomElement: defineCatPagination
});

type CatRadioEvents = {
    onCatChange: EventName<CustomEvent<boolean | string>>,
    onCatFocus: EventName<CatRadioCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatRadioCustomEvent<FocusEvent>>
};

export const CatRadio: StencilReactComponent<CatRadioElement, CatRadioEvents> = /*@__PURE__*/ createComponent<CatRadioElement, CatRadioEvents>({
    tagName: 'cat-radio',
    elementClass: CatRadioElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatRadioEvents,
    defineCustomElement: defineCatRadio
});

type CatRadioGroupEvents = {
    onCatChange: EventName<CustomEvent<boolean | string>>,
    onCatFocus: EventName<CatRadioGroupCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatRadioGroupCustomEvent<FocusEvent>>
};

export const CatRadioGroup: StencilReactComponent<CatRadioGroupElement, CatRadioGroupEvents> = /*@__PURE__*/ createComponent<CatRadioGroupElement, CatRadioGroupEvents>({
    tagName: 'cat-radio-group',
    elementClass: CatRadioGroupElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatRadioGroupEvents,
    defineCustomElement: defineCatRadioGroup
});

type CatScrollableEvents = {
    onScrolledTop: EventName<CustomEvent<void>>,
    onScrolledLeft: EventName<CustomEvent<void>>,
    onScrolledRight: EventName<CustomEvent<void>>,
    onScrolledBottom: EventName<CustomEvent<void>>
};

export const CatScrollable: StencilReactComponent<CatScrollableElement, CatScrollableEvents> = /*@__PURE__*/ createComponent<CatScrollableElement, CatScrollableEvents>({
    tagName: 'cat-scrollable',
    elementClass: CatScrollableElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onScrolledTop: 'scrolledTop',
        onScrolledLeft: 'scrolledLeft',
        onScrolledRight: 'scrolledRight',
        onScrolledBottom: 'scrolledBottom'
    } as CatScrollableEvents,
    defineCustomElement: defineCatScrollable
});

type CatSelectEvents = {
    onCatOpen: EventName<CatSelectCustomEvent<FocusEvent>>,
    onCatClose: EventName<CatSelectCustomEvent<FocusEvent>>,
    onCatChange: EventName<CatSelectCustomEvent<InputEvent>>,
    onCatBlur: EventName<CatSelectCustomEvent<FocusEvent>>
};

export const CatSelect: StencilReactComponent<CatSelectElement, CatSelectEvents> = /*@__PURE__*/ createComponent<CatSelectElement, CatSelectEvents>({
    tagName: 'cat-select',
    elementClass: CatSelectElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatOpen: 'catOpen',
        onCatClose: 'catClose',
        onCatChange: 'catChange',
        onCatBlur: 'catBlur'
    } as CatSelectEvents,
    defineCustomElement: defineCatSelect
});

type CatSelectDemoEvents = NonNullable<unknown>;

export const CatSelectDemo: StencilReactComponent<CatSelectDemoElement, CatSelectDemoEvents> = /*@__PURE__*/ createComponent<CatSelectDemoElement, CatSelectDemoEvents>({
    tagName: 'cat-select-demo',
    elementClass: CatSelectDemoElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatSelectDemoEvents,
    defineCustomElement: defineCatSelectDemo
});

type CatSkeletonEvents = NonNullable<unknown>;

export const CatSkeleton: StencilReactComponent<CatSkeletonElement, CatSkeletonEvents> = /*@__PURE__*/ createComponent<CatSkeletonElement, CatSkeletonEvents>({
    tagName: 'cat-skeleton',
    elementClass: CatSkeletonElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatSkeletonEvents,
    defineCustomElement: defineCatSkeleton
});

type CatSpinnerEvents = NonNullable<unknown>;

export const CatSpinner: StencilReactComponent<CatSpinnerElement, CatSpinnerEvents> = /*@__PURE__*/ createComponent<CatSpinnerElement, CatSpinnerEvents>({
    tagName: 'cat-spinner',
    elementClass: CatSpinnerElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatSpinnerEvents,
    defineCustomElement: defineCatSpinner
});

type CatTabEvents = { onCatClick: EventName<CatTabCustomEvent<MouseEvent>> };

export const CatTab: StencilReactComponent<CatTabElement, CatTabEvents> = /*@__PURE__*/ createComponent<CatTabElement, CatTabEvents>({
    tagName: 'cat-tab',
    elementClass: CatTabElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCatClick: 'catClick' } as CatTabEvents,
    defineCustomElement: defineCatTab
});

type CatTabsEvents = { onCatChange: EventName<CustomEvent<{ id: string; index: number }>> };

export const CatTabs: StencilReactComponent<CatTabsElement, CatTabsEvents> = /*@__PURE__*/ createComponent<CatTabsElement, CatTabsEvents>({
    tagName: 'cat-tabs',
    elementClass: CatTabsElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: { onCatChange: 'catChange' } as CatTabsEvents,
    defineCustomElement: defineCatTabs
});

type CatTagEvents = {
    onCatChange: EventName<CustomEvent<string[]>>,
    onCatFocus: EventName<CatTagCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatTagCustomEvent<FocusEvent>>
};

export const CatTag: StencilReactComponent<CatTagElement, CatTagEvents> = /*@__PURE__*/ createComponent<CatTagElement, CatTagEvents>({
    tagName: 'cat-tag',
    elementClass: CatTagElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatTagEvents,
    defineCustomElement: defineCatTag
});

type CatTextareaEvents = {
    onCatChange: EventName<CustomEvent<string>>,
    onCatFocus: EventName<CatTextareaCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatTextareaCustomEvent<FocusEvent>>
};

export const CatTextarea: StencilReactComponent<CatTextareaElement, CatTextareaEvents> = /*@__PURE__*/ createComponent<CatTextareaElement, CatTextareaEvents>({
    tagName: 'cat-textarea',
    elementClass: CatTextareaElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatTextareaEvents,
    defineCustomElement: defineCatTextarea
});

type CatTimeEvents = {
    onCatChange: EventName<CustomEvent<string>>,
    onCatFocus: EventName<CatTimeCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatTimeCustomEvent<FocusEvent>>
};

export const CatTime: StencilReactComponent<CatTimeElement, CatTimeEvents> = /*@__PURE__*/ createComponent<CatTimeElement, CatTimeEvents>({
    tagName: 'cat-time',
    elementClass: CatTimeElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatTimeEvents,
    defineCustomElement: defineCatTime
});

type CatToggleEvents = {
    onCatChange: EventName<CustomEvent<any>>,
    onCatFocus: EventName<CatToggleCustomEvent<FocusEvent>>,
    onCatBlur: EventName<CatToggleCustomEvent<FocusEvent>>
};

export const CatToggle: StencilReactComponent<CatToggleElement, CatToggleEvents> = /*@__PURE__*/ createComponent<CatToggleElement, CatToggleEvents>({
    tagName: 'cat-toggle',
    elementClass: CatToggleElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {
        onCatChange: 'catChange',
        onCatFocus: 'catFocus',
        onCatBlur: 'catBlur'
    } as CatToggleEvents,
    defineCustomElement: defineCatToggle
});

type CatTooltipEvents = NonNullable<unknown>;

export const CatTooltip: StencilReactComponent<CatTooltipElement, CatTooltipEvents> = /*@__PURE__*/ createComponent<CatTooltipElement, CatTooltipEvents>({
    tagName: 'cat-tooltip',
    elementClass: CatTooltipElement,
    // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
    react: React,
    events: {} as CatTooltipEvents,
    defineCustomElement: defineCatTooltip
});
